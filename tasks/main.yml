---
# tasks file for zabbix
- name: install zabbix repository
  package:
    name: "{{ item }}"
  with_items:
    - "{{ zabbix_repository[ansible_distribution][ansible_distribution_major_version] }}"

- name: install zabbix-agent software
  package:
    name: zabbix-agent
    state: "{{ zabbix_agent | default('present') }}"
  when:
    - zabbix_agent is defined

- name: install zabbix-get software
  package:
    name: zabbix-get
    state: "{{ zabbix_get | default('absent') }}"
  when:
    - zabbix_get is defined

- name: install zabbix-java-gateway software
  package:
    name: zabbix-java-gateway
    state: "{{ zabbix_java_gateway | default('absent') }}"
  when:
    - zabbix_java_gateway is defined

- name: install zabbix-server software
  package:
    name: "zabbix-server-{{ zabbix_server_type | default('mysql') }}"
    state: "{{ zabbix_server | default('absent') }}"
  when:
    - zabbix_server is defined
  notify:
    - import zabbix schema

- name: selinux settings for zabbix_server
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  with_items:
    - httpd_can_connect_zabbix
    - httpd_can_network_connect_db
    - zabbix_can_network
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
    - zabbix_server == "present"

- name: install required selinux software
  package:
    name: "{{ item }}"
  with_items:
    - checkpolicy
    - policycoreutils-python
    - policycoreutils
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
    - zabbix_server == "present"

- name: place selinux type enforcement for zabbix server
  copy:
    src: files/my-zabbixserver.te
    dest: /etc/zabbix/my-zabbixserver.te
  notify:
    - create selinux mod
    - create selinux pp
    - load selinux pp
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
    - zabbix_server == "present"

- name: flush handlers
  meta: flush_handlers

- name: install zabbix-sender software
  package:
    name: zabbix-sender
    state: "{{ zabbix_sender | default('absent') }}"
  when:
    - zabbix_sender is defined

- name: install zabbix-proxy software
  package:
    name: "zabbix-proxy-{{ zabbix_proxy_type | default('mysql') }}"
    state: "{{ zabbix_proxy | default('absent') }}"
  when:
    - zabbix_proxy is defined

- name: install zabbix web software
  package:
    name: "zabbix-web-{{ zabbix_web_type | default('mysql') }}"
    state: "{{ zabbix_web | default('absent') }}"
  when:
    - zabbix_web is defined

- name: configuring zabbix agent
  template:
    src: templates/zabbix_agentd.conf.j2
    dest: /etc/zabbix/zabbix_agentd.conf
  notify:
    - restart zabbix agent
  when:
    - zabbix_agent == "present"

- name: configure zabbix server
  template:
    src: templates/zabbix_server.conf.j2
    dest: /etc/zabbix/zabbix_server.conf
  notify:
    - restart zabbix server
  when:
    - zabbix_server == "present"

# - name: start and enable software
#   service:
#     name: "{{ item }}"
#     state: started
#     enabled: yes
#   with_items:
#     - "{{ zabbix_services[ansible_distribution ~ '-' ~ ansible_distribution_major_version]
#       | default(zabbix_services[ansible_distribution]
#       | default(zabbix_services['default'] )) }}"
#   when:
#     - ansible_virtualization_type != "docker"
